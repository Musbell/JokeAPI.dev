openapi: 3.0.3
info:
  title: JokeAPI - OpenAPI 3.0
  description: "JokeAPI is a REST API that serves uniformly and well formatted jokes."
  contact:
    email: rauber@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: JokeAPI Docs
  url: https://sv443.net/jokeapi/v2/
servers:
  - url: https://v2.jokeapi.dev
tags:
  - name: jokes
    description: JokeAPI
paths:
  /joke/Any:
    get:
      tags:
        - jokes
      summary: "Joke look-up in any category."
      description: "Joke look-up in any category."
      operationId: any
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
  /joke/Misc:
    get:
      tags:
        - jokes
      summary: "Joke look-up in miscellaneous category."
      description: "Joke look-up in miscellaneous category."
      operationId: misc
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
  /joke/Programming:
    get:
      tags:
        - jokes
      summary: "Joke look-up in programming category."
      description: "Joke look-up in programming category."
      operationId: programming
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
  /joke/Pun:
    get:
      tags:
        - jokes
      summary: "Joke look-up in pun category."
      description: "Joke look-up in pun category."
      operationId: pun
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
  /joke/Spooky:
    get:
      tags:
        - jokes
      summary: "Joke look-up in spooky category."
      description: "Joke look-up in spooky category."
      operationId: spooky
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
  /joke/Christmas:
    get:
      tags:
        - jokes
      summary: "Joke look-up in christmas category."
      description: "Joke look-up in christmas category."
      operationId: christmas
      parameters:
        - $ref: "#/components/parameters/typeParam"
        - $ref: "#/components/parameters/containsParam"
        - $ref: "#/components/parameters/amountParam"

      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Payload Too Large"
        "414":
          description: "URI Too Long"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "523":
          description: "Origin Unreachable"
components:
  parameters:
    typeParam:
      name: type
      in: query
      description: "Joke type."
      required: false
      schema:
        type: string
        enum:
          - single
          - twopart
    containsParam:
      name: contains
      in: query
      description: "If this parameter is specified, only jokes that contain the value of this parameter will be served (case insensitive)."
      required: false
      schema:
        type: string
    amountParam:
      name: amount
      in: query
      description: "If it is used, you will get a certain number of jokes in a single request. If JokeAPI has less jokes than demanded, it will not error out but instead send the maximum amount of jokes it can serve. Maximum possible number is 10 and using an invalid value will make JokeAPI default to 1. The joke format will change from the default when you set the amount parameter to 2 or more."
      required: false
      schema:
        type: integer
  responses:
    OK:
      description: "Ok"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Joke"
  schemas:
    Joke:
      type: object
      properties:
        error:
          type: boolean
        category:
          type: string
        type:
          type: string
        setup:
          type: string
        delivery:
          type: string
        flags:
          type: object
          properties:
            nsfw:
              type: boolean
            religious:
              type: boolean
            political:
              type: boolean
            racist:
              type: boolean
            sexist:
              type: boolean
            explicit:
              type: boolean
        id:
          type: integer
        safe:
          type: boolean
        lang:
          type: string
      xml:
        name: Joke
